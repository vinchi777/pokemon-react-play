{"version":3,"sources":["modules/entities/pokemons/reducers.js","config.js","modules/entities/pokemons/actions.js","modules/entities/pokemons/selectors.js","modules/entities/pokemons/index.js","modules/pages/pokemonLeague/reducers.js","modules/pages/pokemonLeague/actions.js","modules/common/actionHelpers.js","modules/pages/pokemonLeague/index.js","components/PokemonLeague/Pokedex.js","components/PokemonLeague/Lineup.js","components/PokemonLeague/Preview.js","components/PokemonLeague/index.js","modules/entities/index.js","modules/pages/index.js","modules/index.js","store.js","serviceWorker.js","index.js"],"names":["defaultState","byId","all","isFetching","addItems","state","items","newState","Object","entries","id","item","add","Set","concat","keys","NODE_PATH","process","POKEMON_API_URL","setItem","type","payload","name","dispatch","axios","get","Config","then","response","formatted","data","pokemons","filter","reducer","action","currentPreview","Search","Input","Pokedex","useDispatch","useState","searchedId","setSearchedId","loading","setLoading","useSelector","entities","registeredPokemons","pokemonSelectors","className","placeholder","enterButton","size","autoFocus","onSearch","val","pokemonActions","pokemon","catch","e","message","status","notification","finally","_","alert","spinning","justify","style","marginTop","span","align","src","sprites","front_default","backgroundColor","weight","height","hairstyle","base_experience","stats","map","key","stat","percent","base_stat","abilities","skill","ability","color","forms","form","types","margin","textAlign","onClick","length","block","pageActions","ghost","minHeight","Lineup","pageState","pages","pokemonLeague","gutter","hoverable","bordered","preview","alt","width","Array","i","Preview","inputs","setInputs","useEffect","console","log","handleInputChange","event","target","value","msg","onSubmit","preventDefault","onChange","htmlType","Header","Layout","Content","PokemonLeague","padding","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff49d8b5.chunk.js","sourcesContent":["export const RECEIVE_POKEMON = 'RECEIVE_POKEMON';\n\nexport const RECEIVE_POKEMONS = 'RECEIVE_POKEMONS';\n\nconst defaultState = {\n  byId: {},\n  all: [],\n  isFetching: false\n};\n\nconst addItems = (state, items) => {\n  let newState = state\n  for(let [id, item] of Object.entries(items)) {\n    newState = add(newState, { [id]: item })\n  }\n  return newState;\n}\n\nconst add = (state, item) => ({\n  ...state,\n  byId: {\n    ...state.byId,\n    ...item\n  },\n  all: [\n    ...new Set(state.all.concat(Object.keys(item)))\n  ]\n});\n\nexport default (state = defaultState, action) => {\n  switch(action.type) {\n    case RECEIVE_POKEMONS:\n      return { ...addItems(state, action.payload), isFetching: false }\n    case RECEIVE_POKEMON:\n      return { ...add(state, action.payload), isFetching: false }\n    default:\n      return state;\n  }\n};\n","let config = {\n  POKEMON_API_URL: 'https://pokeapi.co/api/v2',\n};\n\nexport default {\n  NODE_PATH: 'src',\n  ...process.env,\n  ...config,\n};\n","import axios from  'axios';\nimport Config from '../../../config';\nimport {RECEIVE_POKEMON} from './reducers';\n\nconst setItem = (item) => ({\n  type: RECEIVE_POKEMON,\n  payload: item,\n})\n\nconst index = () => (dispatch) => {\n  return axios.get(`${Config.POKEMON_API_URL}/pokemon`)\n    .then((data) => {\n      console.log(data);\n    });\n};\n\nconst search = (name) => (dispatch) => {\n  return axios.get(`${Config.POKEMON_API_URL}/pokemon/${name}`)\n    .then((response) => {\n      const formatted = {};\n      formatted[response.data.id] = response.data\n      dispatch(setItem(formatted));\n      return response.data\n    });\n};\n\nexport default {\n  index,\n  search,\n  setItem\n};\n","const registered = (pokemons) => {\n  return pokemons.all.filter( id => !!pokemons.byId[id]['registered'] );\n}\n\nexport default {\n  registered\n}\n","import reducer from \"./reducers\";\n\nexport { default as pokemonActions } from \"./actions\";\nexport { default as pokemonSelectors } from \"./selectors\";\n\nexport default reducer;\n"," export const SET_PREVIEW = 'SET_PREVIEW';\n\nconst defaultState = {\n  currentPreview: null,\n}\n\nexport default (state = defaultState, action) => {\n  switch(action.type) {\n    case SET_PREVIEW:\n      return {\n        ...state,\n        currentPreview: action.payload,\n      };\n    default:\n      return state;\n  }\n\n}\n","import {SET_PREVIEW} from './reducers';\nimport { setItems } from 'modules/common/actionHelpers';\n\nconst preview = (id) => (dispatch) => {\n  dispatch(setItems(SET_PREVIEW, id));\n}\n\nexport default {\n  preview\n}\n","export const setItems = (type, payload) => ({\n  type,\n  payload\n});\n","import reducer from \"./reducers\";\n\nexport { default as pageActions } from \"./actions\";\n\nexport default reducer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pokemonActions } from 'modules/entities/pokemons';\nimport { pokemonSelectors } from 'modules/entities/pokemons';\nimport { pageActions } from 'modules/pages/pokemonLeague';\nimport {\n  Icon, Divider, Card,\n  Alert, notification,\n  Progress, Tag, Row,\n  Col, Input, Button,\n  Spin, Avatar\n} from 'antd';\nimport 'styles/pokedex.css';\n\nconst { Search } = Input;\n\nconst Pokedex = () => {\n  const dispatch = useDispatch();\n  const [searchedId, setSearchedId] = useState();\n  const [loading, setLoading] = useState(false);\n  const pokemons = useSelector(state => state.entities.pokemons);\n  const registeredPokemons = useSelector(state => pokemonSelectors.registered(state.entities.pokemons));\n\n  const search = (name) => {\n    if ( !name ) { alert('warning', 'Please enter pokemon name'); return };\n    setLoading(true)\n    dispatch(pokemonActions.search(name))\n      .then((pokemon) => {\n        setSearchedId(pokemon.id);\n      })\n      .catch(e => {\n        const message = (e.response && e.response.status === 404) ? \"Pokemon Not Found\" :  \"Something went wrong\";\n        notification['error']({ message })\n      })\n      .finally(_ => {\n        setLoading(false);\n      });\n  }\n\n  const register = () => {\n    if (registeredPokemons.length >= 6) {\n      notification['error']({ message: 'Pokemon Lineup Full' });\n    } else {\n      const pokemon = pokemons.byId[searchedId]\n      pokemon['registered'] = true;\n      dispatch(pokemonActions.setItem({ [pokemon.id]: pokemon }))\n    }\n  }\n\n  const unregister = () => {\n    const pokemon = pokemons.byId[searchedId]\n    pokemon['registered'] = false;\n    dispatch(pokemonActions.setItem({ [pokemon.id]: pokemon }));\n    dispatch(pageActions.preview(null));\n  }\n\n  return (\n    <Card className=\"pokedex-wrapper\">\n      <Search\n        placeholder=\"search a pokemon\"\n        enterButton\n        size=\"large\"\n        autoFocus\n        onSearch={ val => search(val) }\n      />\n\n      <Spin spinning={loading}>\n        { pokemons.byId[searchedId] &&\n          <Row type=\"flex\" justify=\"center\" style={{marginTop: '20px'}}>\n            <Col span={24} align=\"center\">\n              <Avatar src={ pokemons.byId[searchedId].sprites.front_default } size={128} style={{ backgroundColor: '#eee' }}/>\n              <h1 className=\"pokemon-name\">{ pokemons.byId[searchedId].name }</h1>\n            </Col>\n            <Divider />\n            <Col span={24} className=\"pokemon-details\">\n              <h1>Details</h1>\n              <Col span={12}>\n                <label>Weight:</label> <span>{ pokemons.byId[searchedId].weight }</span>\n              </Col>\n              <Col span={12}>\n                <label>Height:</label> <span>{ pokemons.byId[searchedId].height }</span>\n              </Col>\n              <Col span={12}>\n                <label>Hairstyle:</label> <span>{ pokemons.byId[searchedId].hairstyle }</span>\n              </Col>\n              <Col span={12}>\n                <label>Experience</label> <span>{ pokemons.byId[searchedId].base_experience }</span>\n              </Col>\n            </Col>\n\n            <Col span={24} className=\"pokemon-abilities\">\n              <h1>Stats</h1>\n              { pokemons.byId[searchedId].stats.map((item) => (\n                <div key={item.stat.name} >\n                  <span>{ item.stat.name }</span>\n                  <Progress percent={item.base_stat} />\n                </div>\n              )) }\n            </Col>\n\n            <Col span={24} className=\"pokemon-abilities\">\n              <h1>Abilities</h1>\n              { pokemons.byId[searchedId].abilities.map((skill) => (\n                <Tag key={skill.ability.name} color=\"magenta\">{ skill.ability.name }</Tag>\n              )) }\n            </Col>\n\n            <Col span={24} className=\"pokemon-forms\">\n              <h1>Forms</h1>\n              { pokemons.byId[searchedId].forms.map((form) => (\n                <Tag key={form.name} color=\"volcano\">{ form.name }</Tag>\n              )) }\n            </Col>\n\n            <Col span={24} className=\"pokemon-types\">\n              <h1>Types</h1>\n              { pokemons.byId[searchedId].types.map((item) => (\n                <Tag key={item.type.name} color=\"cyan\">{ item.type.name }</Tag>\n              )) }\n            </Col>\n            <Col span={24} style={{ margin: \"30px 0px\", textAlign: \"center\" }}>\n              { !pokemons.byId[searchedId][\"registered\"] && <Button onClick={register} size=\"large\" type=\"primary\" block> Add to Lineup</Button> }\n              { pokemons.byId[searchedId][\"registered\"] && <Alert message=\"Added to Lineup\" type=\"success\"/> }\n              { pokemons.byId[searchedId][\"registered\"] && <Button style={{ marginTop: \"10px\" }} onClick={unregister} type=\"danger\" ghost> Remove </Button> }\n            </Col>\n          </Row>\n        }\n        {\n          !pokemons.byId[searchedId] &&\n            <Row align=\"middle\" justify=\"center\" type=\"flex\" style={{minHeight: '500px'}}>\n              <Col span={24} align=\"center\">\n                <Icon type=\"qq\" className=\"pokemon-placeholder-icon\"/>\n                <h1>POKEDEX</h1>\n                <p>Search your best pokemons and add them to your lineup</p>\n              </Col>\n            </Row>\n        }\n      </Spin>\n    </Card>\n  )\n};\n\nexport default Pokedex\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pokemonSelectors } from 'modules/entities/pokemons';\nimport { pageActions } from 'modules/pages/pokemonLeague';\nimport { Card, Row, Col } from 'antd';\nimport 'styles/lineup.css';\n\nconst Lineup = () => {\n  const pokemons = useSelector(state => state.entities.pokemons);\n  const dispatch = useDispatch();\n  const registeredPokemons = useSelector(state => pokemonSelectors.registered(state.entities.pokemons));\n  const pageState = useSelector(state => state.pages.pokemonLeague);\n  const numberOfCards = 6;\n\n  const preview = (id) => {\n    dispatch(pageActions.preview(id))\n  }\n\n  return (\n    <div className=\"lineup-container\">\n      <h1 className=\"lineup-header\">Pokemon Lineup</h1>\n      <Row gutter={16}>\n        {\n          registeredPokemons.map(id => (\n            <Col span={8} key={id}>\n              <Card\n                hoverable\n                bordered\n                className={ (pageState.currentPreview && pageState.currentPreview === id) ? \"active\" : \"\" }\n                onClick={ () => preview(id) }\n              >\n                <img className=\"lineup-image\" alt=\"example\" src={ pokemons.byId[id].sprites.front_default } width=\"100%\"/>\n              </Card>\n            </Col>\n\n          ) )\n        }\n        {\n          [...Array(numberOfCards - registeredPokemons.length)].map((e, i) => (\n            <Col span={8} key={i}>\n              <div className=\"empty-entry-lineup\">\n                <p className=\"\">{ registeredPokemons.length + i + 1 }</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n\n    </div>\n  )\n}\n\nexport default Lineup;\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pokemonActions } from 'modules/entities/pokemons';\nimport { notification, Row, Col, Input, Button } from 'antd';\nimport 'styles/preview.css';\n\nconst Preview = () => {\n  const pokemons = useSelector(state => state.entities.pokemons);\n  const pageState = useSelector(state => state.pages.pokemonLeague);\n  const [inputs, setInputs] = useState({name: ''});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (pokemons.byId[pageState.currentPreview]) {\n      console.log('trigger')\n      setInputs(pokemons.byId[pageState.currentPreview])\n    }\n  }, [pageState])\n\n  const handleSubmit = (event) => {\n    if (event) { event.preventDefault(); }\n    dispatch(pokemonActions.setItem({ [pageState.currentPreview]: inputs }))\n    alert('success', 'Saved')\n  }\n\n  const handleInputChange = (event) => {\n    const {name, value} = event.target;\n    setInputs({...inputs, [name]: value});\n  }\n\n  const alert = (type, msg) => {\n    notification[type]({\n      message: msg,\n    })\n  }\n\n  return (\n    <div className=\"preview-container\">\n      <h1 className=\"preview-header\">Pokemon Data</h1>\n      { !!pageState.currentPreview && (\n        <form onSubmit={handleSubmit}>\n          <Row gutter={16}>\n            <Col span={12}>\n              <label>Name</label>\n              <Input name=\"name\" onChange={ handleInputChange } value={inputs.name} />\n            </Col>\n\n            <Col span={12}>\n              <label>Hair style</label>\n              <Input name=\"hairstyle\" onChange={ handleInputChange } value={inputs.hairstyle} />\n            </Col>\n\n            <Col span={12}>\n              <label>Weight</label>\n              <Input name=\"weight\" onChange={ handleInputChange } value={inputs.weight} />\n            </Col>\n\n            <Col span={12}>\n              <label>Height</label>\n              <Input name=\"height\" onChange={ handleInputChange } value={inputs.height} />\n            </Col>\n\n            <Col span={12}>\n              <Button htmlType=\"submit\" type=\"primary\" size=\"large\">Save</Button>\n            </Col>\n          </Row>\n        </form>\n      )  }\n      { !pageState.currentPreview && (\n        <Col span={24}>\n          <div className=\"empty-form\">\n            <p> Change pokemon data from your lineup. </p>\n          </div>\n        </Col>\n      ) }\n    </div>\n  )\n};\n\nexport default Preview;\n","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport Pokedex from './Pokedex';\nimport Lineup from './Lineup';\nimport Preview from './Preview';\nimport 'styles/layout.css';\n\nconst { Header, Content } = Layout;\n\nconst PokemonLeague = () => {\n  return (\n    <Layout>\n      <Header>\n        <h2 className=\"title\">Pokemon League</h2>\n      </Header>\n      <Layout>\n        <Content style={{ padding: '30px 50px' }}>\n          <Row>\n            <Col span={14} className=\"lineup-preview-container\" style={{ padding: '0px 30px 0px 50px' }}>\n              <Lineup />\n              <Preview />\n            </Col>\n            <Col span={10} className=\"pokedex-container\" style={{ padding: '0px 50px 0px 30px' }}>\n              <Pokedex />\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default PokemonLeague;\n","import { combineReducers } from 'redux';\nimport pokemons from './pokemons';\n\nexport default combineReducers({\n  pokemons\n});\n","import { combineReducers } from 'redux';\nimport pokemonLeague from './pokemonLeague';\n\nexport default combineReducers({\n  pokemonLeague\n});\n","import { combineReducers } from 'redux';\nimport entities from './entities';\nimport pages from './pages';\n\nexport default combineReducers({\n  entities,\n  pages\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from './modules';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  const store = createStore(\n    reducers,\n    composeEnhancer(applyMiddleware(thunk)),\n  );\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PokemonLeague from './components/PokemonLeague';\nimport configureStore from './store';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nconst App = (\n  <Provider store={store}>\n    <PokemonLeague />\n  </Provider>\n);\n\nReactDOM.render(App, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}